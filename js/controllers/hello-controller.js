// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['controllers/base/controller', 'models/photos', 'models/photos-collection', 'views/photos-collection-view', 'models/base/collection'], function(Controller, Photo, PhotosCollection, PhotosCollectionView, Collection) {
  'use strict';
  var HelloController, _ref;
  return HelloController = (function(_super) {
    __extends(HelloController, _super);

    function HelloController() {
      _ref = HelloController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    HelloController.prototype.show = function(params) {
      /*
      #@model = new Photos()
      #@view = new HelloWorldView
      #  containerMethod: 'html'
      #  model: @model
      #  region: 'main'
      
      #fetch = @model.fetch()
      #fetch.error((e)->
      #  #muestra los arguments del mismo fetch
      #  console.log arguments
      #).then((data)->
      #  #aqui a parsear..
      #  console.log "Wuju! exitoso!"
      #  console.log data.stat
      #).always(->
      #  #sea error o no igual se ejecuta aqui una funcion
      #  #mas info.
      #  #http://railsadventures.wordpress.com/2012/09/02/backbone-js-models-save-always-callback/
      #)
      */

      /*
        http://dailyjs.com/2012/12/27/backbone-tutorial-5/
      */

      var _this = this;
      this.photo = new Photo;
      this.photos = new Collection(null, {
        model: Photo
      });
      this.photos.url = this.photo.url();
      this.photos.parse = function(response) {
        return response.photos.photo;
      };
      this.photosView = new PhotosCollectionView({
        collection: this.photos,
        region: 'main'
      });
      return this.photos.fetch().then(function() {
        console.log(arguments);
        return console.log(_this.photosView);
      });
    };

    return HelloController;

  })(Controller);
});
